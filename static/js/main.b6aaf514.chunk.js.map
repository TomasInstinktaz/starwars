{"version":3,"sources":["components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/todo-add-item/index.js","components/todo-add-item/todo-add-item.js","components/todo-fillter/index.js","components/todo-fillter/todo-filter.js","services/swapi-service.js","components/app/index.js","components/app/app.js","index.js"],"names":["TodoListItem","name","birthYear","gender","onDelete","Fragment","onClick","className","TodoList","items","elements","map","item","id","itemProps","key","TodoAddItem","onHandleChange","onItemAddded","type","value","onChange","disabled","length","TodoFilter","filter","onHandleFilterChange","placeholder","SwapiService","_apiBase","getResource","url","a","fetch","res","ok","Error","status","json","getAllPeople","results","_transformPerson","slice","getPerson","person","getPlanet","_extractItemId","planet","_transformPlanet","getPlanetsFromUserArr","data","Promise","all","element","homeworld","_extractId","match","birth_year","App","useState","setItems","setName","setFilter","useEffect","then","createItem","genderArr","Math","floor","random","filteredData","Object","keys","some","toLowerCase","includes","event","target","newList","idx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6aaf514.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({ name, birthYear, gender, onDelete }) => {\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<td>{name}</td>\r\n\t\t\t<td>{birthYear}</td>\r\n\t\t\t<td>{gender}</td>\r\n\t\t\t<td><button\r\n\t\t\t\tonClick={onDelete}\r\n\t\t\t>\r\n\t\t\t\t<i className=\"fa fa-trash-o\"></i>\r\n\t\t\t</button></td>\r\n\t\t</React.Fragment>\r\n\t\t// <span>\r\n\t\t// \t<span\r\n\t\t// \t\tclassName=\"item__label\">\r\n\t\t// \t\t{name}\r\n\t\t// \t</span>\r\n\r\n\t\t// \t<button type=\"button\"\r\n\t\t// \t\tclassName=\"item__btn\"\r\n\t\t// \t>\r\n\t\t// \t\t<i className=\"fa fa-trash-o\"></i>\r\n\t\t// \t</button>\r\n\t\t// </span>\r\n\t);\r\n};\r\n\r\nexport default TodoListItem;","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\n\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ items, onDelete }) => {\r\n\r\n\tconst elements = items.map((item) => {\r\n\t\tconst { id, ...itemProps } = item;\r\n\t\treturn (\r\n\t\t\t<tr key={id} className=\"list-group-item\">\r\n\t\t\t\t<TodoListItem\r\n\t\t\t\t\t{...itemProps}\r\n\t\t\t\t\tonDelete={() => onDelete(id)} />\r\n\t\t\t</tr>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<table>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t<th>BirthYear</th>\r\n\t\t\t\t\t<th>Gender</th>\r\n\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{elements}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n};\r\n\r\nexport default TodoList;","import TodoAddItem from './todo-add-item';\r\n\r\nexport default TodoAddItem;","import React from 'react';\r\n\r\nimport './todo-add-item.css';\r\n\r\nconst TodoAddItem = ({ name, onHandleChange, onItemAddded }) => {\r\n\treturn (\r\n\t\t<div className=\"todo-add-item\">\r\n\t\t\t<input type=\"text\" value={name} onChange={onHandleChange} />\r\n\t\t\t<button type=\"button\" disabled={(name.length === 0 ? true : false)} onClick={() => onItemAddded(name)}>\r\n\t\t\t\tAdd\r\n\t\t </button >\r\n\t\t</div >\r\n\t);\r\n};\r\n\r\nexport default TodoAddItem;","import TodoFilter from './todo-filter';\r\n\r\nexport default TodoFilter;","import React from 'react';\r\n\r\nimport './todo-filter.css';\r\n\r\n\r\nconst TodoFilter = ({ filter, onHandleFilterChange }) => {\r\n\treturn (\r\n\t\t<div className=\"todo-filter\">\r\n\t\t\t<input type=\"text\" placeholder=\"search\" value={filter} onChange={onHandleFilterChange} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodoFilter;","export default class SwapiService {\r\n\r\n\t_apiBase = 'https://swapi.dev/api';\r\n\t// _imageBase = 'https://starwars-visualguide.com/assets/img';\r\n\r\n\tgetResource = async (url) => {\r\n\t\tconst res = await fetch(`${this._apiBase}${url}`);\r\n\r\n\t\tif (!res.ok) {\r\n\t\t\tthrow new Error(`Could not fetch ${url}` +\r\n\t\t\t\t`, received ${res.status}`)\r\n\t\t}\r\n\t\treturn await res.json();\r\n\t};\r\n\r\n\tgetAllPeople = async () => {\r\n\t\tconst res = await this.getResource(`/people/`);\r\n\t\treturn res.results\r\n\t\t\t.map(this._transformPerson)\r\n\t\t\t.slice(0, 10);\r\n\t};\r\n\r\n\tgetPerson = async (id) => {\r\n\t\tconst person = await this.getResource(`/people/${id}/`);\r\n\t\treturn this._transformPerson(person);\r\n\t};\r\n\r\n\tgetPlanet = async (item) => {\r\n\t\tconst id = this._extractItemId(item);\r\n\t\tconst planet = await this.getResource(`/planets/${id}/`);\r\n\t\treturn this._transformPlanet(planet);\r\n\t};\r\n\r\n\tgetPlanetsFromUserArr = async (data) => {\r\n\t\treturn Promise.all(data.map((element) => this.getPlanet(element.homeworld)));\r\n\t}\r\n\r\n\t// getPeopleWithTheirPlanet = async () => {\r\n\t// \tconst allPeople = await this.getAllPeople();\r\n\t// \treturn Promise.all(allPeople.map(async (element) => {\r\n\t// \t\tconst planet = await this.getPlanet(element.homeworld);\r\n\t// \t\tconsole.log(Object.assign(element, planet));\r\n\t// \t\t// console.log(await this.getPlanet(element.homeworld));\r\n\t// \t\tconst content = this.getPlanet(element.homeworld);\r\n\t// \t\treturn content;\r\n\t// \t}));\r\n\t// }\r\n\r\n\r\n\t_extractId = (item) => {\r\n\t\tconst idRegExp = /\\/([0-9]*)\\/$/;\r\n\t\treturn item.url.match(idRegExp)[1];\r\n\t};\r\n\r\n\t_extractItemId = (item) => {\r\n\t\tconst idRegExp = /\\/([0-9]*)\\/$/;\r\n\t\treturn item.match(idRegExp)[1];\r\n\t};\r\n\r\n\r\n\t_transformPerson = (person) => {\r\n\t\treturn {\r\n\t\t\tid: this._extractId(person),\r\n\t\t\tname: person.name,\r\n\t\t\tbirthYear: person.birth_year,\r\n\t\t\tgender: person.gender,\r\n\t\t\thomeworld: person.homeworld\r\n\t\t}\r\n\t}\r\n\r\n\t_transformPlanet = (planet) => {\r\n\t\treturn {\r\n\t\t\tid: this._extractId(planet),\r\n\t\t\tname: planet.name\r\n\t\t}\r\n\t}\r\n}","import App from './app';\r\n\r\nexport default App;","import React, { useState, useEffect } from 'react';\n\nimport TodoList from '../todo-list';\nimport TodoAddItem from '../todo-add-item';\nimport TodoFilter from '../todo-fillter';\nimport SwapiService from '../../services/swapi-service';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport './app.css';\n\nexport default function App() {\n\n  const [items, setItems] = useState([\n    // { id: 1, name: 'Drink Coffee', birthYear: string, gender: string }\n  ]);\n  const [name, setName] = useState('');\n  const [filter, setFilter] = useState('');\n\n\n  useEffect(() => {\n    const sw = new SwapiService();\n    sw.getAllPeople().then((data) => {\n      setItems(data);\n    });\n  }, []);\n\n  const onHandleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n\n\n  const onHandleChange = (event) => {\n    setName(event.target.value);\n  }\n  const onItemAddded = (name) => {\n    if (name.length > 0) {\n      const newList = [...items, createItem(name)];\n      setItems(newList);\n      setName('');\n    }\n  }\n\n  const createItem = (name) => {\n    const genderArr = [\n      'male',\n      'female',\n      'unknown'\n    ];\n    return {\n      id: ++(items.length),\n      name,\n      birthYear: Math.floor(Math.random() * 100) + 1,\n      gender: genderArr[Math.floor(Math.random() * genderArr.length)]\n    };\n  }\n\n\n  const onDelete = (idx) => {\n    setItems(items.filter(({ id }) => id !== idx));\n  }\n\n  const filteredData = items.filter(item => {\n    return Object.keys(item).some(key =>\n      typeof item[key] === \"string\" && item[key].toLowerCase().includes(filter.toLowerCase())\n    );\n  });\n\n  return (\n    <div className=\"todo-app\">\n\n      <TodoFilter\n        onHandleFilterChange={onHandleFilterChange} />\n\n      <TodoAddItem\n        name={name}\n        onHandleChange={onHandleChange}\n        onItemAddded={onItemAddded} />\n      <TodoList\n        items={filteredData}\n        onDelete={onDelete} />\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}